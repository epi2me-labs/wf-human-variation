params {
    out_dir = "output"
    wf {
        // container sha
        e2l_base_tag = "sha2b856c1f358ddf1576217a336bc0e9864b6dc0ed"
        e2l_snp_tag = "sha17e686336bf6305f9c90b36bc52ff9dd1fa73ee9"
        e2l_sv_tag = "shac591518dd32ecc3936666c95ff08f6d7474e9728"
        e2l_mod_tag = "shaa7bf2b62946eeb7646b9b9d60b892edfc3b3a52c"
        cnv_tag = "sha428cb19e51370020ccf29ec2af4eead44c6a17c2"
        str_tag = "shadd2f2963fe39351d4e0d6fa3ca54e1064c6ec057"
        spectre_tag = "sha42472d37a5a992c3ee27894a23dce5e2fff66d27"
        snpeff_tag = "shab01c188f11ca9ce53d186fe22111eeac52409523"
        common_sha = "shaabceef445fb63214073cbf5836fdd33c04be4ac7"
        
    }
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    container = "ontresearch/wf-human-variation:${params.wf.e2l_base_tag}"
    withLabel:wf_human_snp {
        container = "ontresearch/wf-human-variation-snp:${params.wf.e2l_snp_tag}"
    }
    withLabel:wf_human_sv {
        container = "ontresearch/wf-human-variation-sv:${params.wf.e2l_sv_tag}"
    }
    withLabel:wf_human_mod {
        container = "ontresearch/modkit:${params.wf.e2l_mod_tag}"
    }
    withLabel:wf_cnv {
        container = "ontresearch/wf-cnv:${params.wf.cnv_tag}"
    }
    withLabel:wf_human_str {
        container = "ontresearch/wf-human-variation-str:${params.wf.str_tag}"
    }
    withLabel:snpeff_annotation {
        container = "ontresearch/snpeff:${params.wf.snpeff_tag}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:spectre {
        container = "ontresearch/spectre:${params.wf.spectre_tag}"
    }

    shell = ['/bin/bash', '-euo', 'pipefail']

    // by default GPU tasks will run in serial to avoid GPU management.
    // cluster and cloud users can remove this with -profile discrete_gpus.
    // we use profiles to handle this as maxForks cannot be set dynamically
    // see https://github.com/nextflow-io/nextflow/discussions/3806 and CW-1857
    withLabel:gpu {
        maxForks = 1
    }
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process."withLabel:gpu".containerOptions = "--gpus all"
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
            //envWhitelist = "" // if your cluster sets a variable to indicate which GPU has been assigned you will want to allow it here
        }
        process."withLabel:gpu".containerOptions = "--nv"
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda {
            enabled = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "jq-DsNextflowStackNonPhi-20240721_1"
            memory = '8G'
            container = { "${params.aws_image_prefix}-wf-human-variation:${params.wf.e2l_base_tag}" }
            withLabel:wf_human_snp {
                container = { "${params.aws_image_prefix}-wf-human-variation-snp:${params.wf.e2l_snp_tag}" }
            }
            withLabel:wf_human_sv {
                container = { "${params.aws_image_prefix}-wf-human-variation-sv:${params.wf.e2l_sv_tag}" }
            }
            withLabel:wf_human_mod {
                container = { "${params.aws_image_prefix}-modkit:${params.wf.e2l_mod_tag}" }
            }
            withLabel:wf_cnv {
                container = { "${params.aws_image_prefix}-wf-cnv:${params.wf.cnv_tag}-root" }
            }
            withLabel:wf_human_str {
                container = { "${params.aws_image_prefix}-wf-human-variation-str:${params.wf.str_tag}" }
            }
            withLabel:snpeff_annotation {
                container = "${params.aws_image_prefix}-snpeff:${params.wf.snpeff_tag}"
            }
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:spectre {
                container = "${params.aws_image_prefix}-spectre:${params.wf.spectre_tag}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }

    // lift limit on simultaneous gpu jobs
    discrete_gpus {
        process."withLabel:gpu".maxForks = null
    }

}


timeline {
  enabled = true
  file = "${params.outdirNonPhi}/execution/timeline.html"
  overwrite = true
}
report {
  enabled = true
  file = "${params.outdirNonPhi}/execution/report.html"
  overwrite = true
}
trace {
  enabled = true
  file = "${params.outdirNonPhi}/execution/trace.txt"
  overwrite = true
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
    RUST_BACKTRACE = 1
}
